
Firstly, get the whole elevation profile and the whole heading profile of the route via GPX.
Convert these to a time series signal vector. From this we can perform wavelet analysis to get
the locations of inflection points in the data.
After this, we do our second pass where we look at route data and perform merge cost analysis.
Get every leg in the route...
For each leg, convert to a new segment, and calculate merge cost of each.
Do an initial pass, to calculate high order segments (junctions, barriers, and inflection points from
wavelet analysis). We set maximum merge cost (whatever the threshold is) to these segments.
After this, for each segment, calculate merge cost of every combination of segment merging. Perform
greedy merge of segments based on the cheapest merge cost first.
Do this until all segments fall above the merge cost threshold.

example:
merge threshold = .5
1 - 2 - 3 - 4 - 5

1 - 2 = 0.25
2 - 3 = 0.49
3 - 4 = 0.3
4 - 5 = 0.2

becomes:

1 - 2 - 3 - 4/5

now:
1 -2 = .25
2 - 3 = .5 // doesn't merge
3 - 4/5 = .45

becomes:
1/2 - 3 - 4/5

now:
1/2 - 3 = .65
3 - 4/5 = .45

becomes:

1/2 - 3/4/5
now:

1/2 - 3/4/5 = .7
done

