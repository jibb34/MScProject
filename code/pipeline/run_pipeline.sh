#!/bin/bash

#CONFIG SETTINGS
VENV_DIR=".venv"
REQ_FILE="requirements.txt"
MAIN_SCRIPT="main.py"
CONFIG_FILE="settings.yml"
DEBUG=0

#YAML PARSING (generated by AI because Regex sucks):
function parse_yaml_value() {
  grep "^$1" "$CONFIG_FILE" | sed "s/^$1:[ ]*//" | tr -d '"'
}

if [ ! -f "$CONFIG_FILE" ]; then
  echo "[ERROR] $CONFIG_FILE not found!"
  exit 1
fi

#NOTE: Define setting names and values here
GPX_FILE=$(parse_yaml_value "gpx_file")
PBF_OUTPUT=$(parse_yaml_value "pbf_output")
CHUNK_SIZE=$(parse_yaml_value "chunk_size")
JSON_DIR=$(parse_yaml_value "json_directory")

if [ -z "$GPX_FILE" ] || [ -z "$PBF_OUTPUT" ]; then
  "[ERROR] gpx_file and gpx_file must be set in $CONFIG_FILE"
  exit 1
fi

if [ -z "$CHUNK_SIZE" ]; then
  CHUNK_SIZE=0
fi

for arg in "$@"; do
  if [ "$arg" == "--debug" ]; then
    DEBUG=1
  fi
done

echo "Starting pipeline..."
echo "GPX file: $GPX_FILE"
echo "PBF output file: $PBF_OUTPUT"

if [ ! -d "$VENV_DIR" ]; then
  echo "Creating virtual environment..."
  python3 -m venv "$VENV_DIR"
fi

source "$VENV_DIR/bin/activate"

echo "Installing Python dependencies..."
pip install --quiet -r "$REQ_FILE"

# Launch Docker
echo "Launching OSRM Container"
docker-compose -f "$DOCKER_COMPOSE_FILE" up -d
echo "Waiting for OSRM server to initialize"
sleep 5

echo "Running pipeline..."
if [ "$DEBUG" -eq 1 ]; then
  python "$MAIN_SCRIPT" "$GPX_FILE" "$PBF_OUTPUT" "$JSON_DIR" "$CHUNK_SIZE" --debug
else
  python "$MAIN_SCRIPT" "$GPX_FILE" "$PBF_OUTPUT" "$JSON_DIR" "$CHUNK_SIZE"
fi

echo "Cleaning up virtual environment..."
deactivate
docker-compose -f "$DOCKER_COMPOSE_FILE" down
rm -rf "$VENV_DIR"

echo "Done :)"
